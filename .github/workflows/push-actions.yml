name: Automated Tests
# run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on:
  push

jobs:
  eslint:
    name: Run ESLint scanning
    runs-on: ubuntu-latest
    # permissions:
    #   contents: read
    #   security-events: write
    #   actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    # strategy:
    #   matrix:
    #     python-version: ["pypy3.9", "pypy3.10", "3.9", "3.10", "3.11", "3.12"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.11.0'
          cache: 'npm'
      - name: Install npm dependencies
        run: npm ci
      - name: Run ESLint
        run: npm run eslint
    #   - name: Upload analysis results to GitHub
    #     uses: github/codeql-action/upload-sarif@v2
    #     with:
    #       sarif_file: eslint-results.sarif
    #       wait-for-processing: true


  tests:
    name: Run Automated tests
    runs-on: ubuntu-latest
    # permissions:
    #   contents: read
    #   security-events: write
    #   actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.11.0'
          cache: 'npm'
      - name: Set up JDK 11 for x64
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          architecture: x64
    #   - name: Set up Python ${{ matrix.python-version }}
    #     uses: actions/setup-python@v4
    #     with:
    #       python-version: ${{ matrix.python-version }}
    #     # You can test your matrix by printing the current Python version
      - name: Install Lynx dependency
        run: sudo apt install lynx
      - name: Install PHP8.1
        run: sudo apt install php8.1
      - name: Install npm dependencies
        run: npm ci
      - name: Start server and run tests
        run: |
          npm run start &
          sleep 10 &&
          curl http://localhost:8888 &&
          npm run test

    #   - name: Archive production artifacts
    #     uses: actions/upload-artifact@v4
    #     with:
    #       name: dist-without-markdown
    #       path: |
    #         dist
    #         !dist/**/*.md
    #   - name: Archive code coverage results
    #     uses: actions/upload-artifact@v4
    #     with:
    #       name: code-coverage-report
    #       path: output/test/code-coverage.html
